// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smarthome.Infrastructure.EF;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SmartHomeContext))]
    [Migration("20231009111859_PrivateIdSet")]
    partial class PrivateIdSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("Smarthome.Domain.Entities.Humidity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("Date");

                    b.Property<double>("Percentage")
                        .HasColumnType("REAL")
                        .HasColumnName("Percentage");

                    b.Property<Guid>("SensorId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Humidities", (string)null);
                });

            modelBuilder.Entity("Smarthome.Domain.Entities.Sensor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sensors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ad7c0bf-f832-4c58-b4c7-aee45c50ee32"),
                            Title = "LivingRoom"
                        },
                        new
                        {
                            Id = new Guid("66e576ee-bc79-47a1-87fc-68bd33f2882b"),
                            Title = "Bedroom"
                        },
                        new
                        {
                            Id = new Guid("6dcc0fc2-bfb2-4432-a4c7-90b198b654dd"),
                            Title = "WorkSpace"
                        });
                });

            modelBuilder.Entity("Smarthome.Domain.Entities.Temperature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Celsius")
                        .HasColumnType("REAL")
                        .HasColumnName("Celsius");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("Date");

                    b.Property<Guid>("SensorId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Temperatures", (string)null);
                });

            modelBuilder.Entity("Smarthome.Domain.Entities.Humidity", b =>
                {
                    b.HasOne("Smarthome.Domain.Entities.Sensor", "Sensor")
                        .WithMany("Humidities")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Smarthome.Domain.Entities.Temperature", b =>
                {
                    b.HasOne("Smarthome.Domain.Entities.Sensor", "Sensor")
                        .WithMany("Temperatures")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Smarthome.Domain.Entities.Sensor", b =>
                {
                    b.Navigation("Humidities");

                    b.Navigation("Temperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
